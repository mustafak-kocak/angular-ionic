{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nconst _c0 = () => [\"/login\"];\nexport let RegisterPage = /*#__PURE__*/(() => {\n  class RegisterPage {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.user = {\n        email: '',\n        password: ''\n      }; // Kullanıcıdan alınan kayıt bilgileri\n    }\n    register() {\n      const veri = {\n        email: this.user.email,\n        password: this.user.password\n      };\n      // authService.register fonksiyonuna veriyi gönderip, yanıtı subscribe ile alıyoruz\n      this.authService.register(veri).subscribe(response => {\n        console.log(\"Kayıt Başarılı:\", response);\n        // API'den gelen token'ı yerel depolamaya kaydediyoruz\n        this.authService.setName(response.token);\n        // Kullanıcıyı home sayfasına yönlendiriyoruz\n        this.router.navigateByUrl('home');\n      }, error => {\n        console.error(\"Kayıt Hatası:\", error);\n        // Hata durumunda kullanıcıya bir mesaj gösterebilirsiniz\n        alert('Kayıt başarısız! Lütfen bilgilerinizi kontrol edin.');\n      });\n    }\n    static {\n      this.ɵfac = function RegisterPage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RegisterPage)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterPage,\n        selectors: [[\"app-register\"]],\n        decls: 18,\n        vars: 4,\n        consts: [[3, \"ngSubmit\"], [\"position\", \"floating\"], [\"name\", \"email\", \"type\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", \"type\", \"submit\", \"color\", \"primary\"], [3, \"routerLink\"]],\n        template: function RegisterPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Kay\\u0131t Ol\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(4, \"ion-content\")(5, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterPage_Template_form_ngSubmit_5_listener() {\n              return ctx.register();\n            });\n            i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 1);\n            i0.ɵɵtext(8, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"ion-input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_9_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 1);\n            i0.ɵɵtext(12, \"\\u015Eifre\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"ion-input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_13_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(14, \"ion-button\", 4);\n            i0.ɵɵtext(15, \"Kay\\u0131t Ol\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"ion-button\", 5);\n            i0.ɵɵtext(17, \"Kay\\u0131t Ol\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.IonButton, i4.IonContent, i4.IonHeader, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor, i4.RouterLinkDelegate, i2.RouterLink],\n        styles: [\"ion-content[_ngcontent-%COMP%]{--padding-top: 60%;--padding-start:10%;--padding-end:10%;--background: url(d00b7eee80f1.jpeg) 0 0/100% 100% no-repeat}.input-group[_ngcontent-%COMP%]{background:#fff;border-radius:10px;overflow:hidden;margin-bottom:15px}.errors[_ngcontent-%COMP%]{font-size:small;color:#fff;background:var(--ion-color-danger);padding-left:15px;padding-top:5px;padding-bottom:5px}\"]\n      });\n    }\n  }\n  return RegisterPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}