{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@ionic/angular\";\nfunction LoginPage_ion_text_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 5)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.user = {\n        email: '',\n        password: ''\n      }; // Kullanıcıdan alınan giriş bilgileri\n      this.validEmail = 'eve.holt@reqres.in'; // Geçerli e-posta\n      this.validPassword = 'cityslicka'; // Geçerli şifre\n    }\n    onLogin() {\n      // Kullanıcıdan alınan bilgileri API'ye gönderiyoruz\n      this.authService.login(this.user).subscribe(response => {\n        if (this.user.password === this.validPassword && this.user.email === this.validEmail) {\n          console.log('Giriş başarılı, token alındı:', response.token);\n          alert('Giriş başarılı! Token: ' + response.token);\n          // Giriş başarılıysa, kullanıcıyı yönlendirebiliriz\n          this.router.navigateByUrl('/home');\n        } else {\n          alert('Hatalı e-posta veya şifre!');\n        }\n      }, error => {\n        console.error('Hatalı e-posta veya şifre:', error);\n        alert('Hatalı e-posta veya şifre!');\n      });\n    }\n    static {\n      this.ɵfac = function LoginPage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginPage)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginPage,\n        selectors: [[\"app-login\"]],\n        decls: 16,\n        vars: 3,\n        consts: [[\"position\", \"floating\"], [\"type\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", 3, \"click\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"color\", \"danger\"]],\n        template: function LoginPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Giri\\u015F Yap\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-item\")(6, \"ion-label\", 0);\n            i0.ɵɵtext(7, \"E-posta\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"ion-input\", 1);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_8_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 0);\n            i0.ɵɵtext(11, \"\\u015Eifre\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"ion-input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_12_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"ion-button\", 3);\n            i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_13_listener() {\n              return ctx.loginUser();\n            });\n            i0.ɵɵtext(14, \"Giri\\u015F Yap\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, LoginPage_ion_text_15_Template, 3, 1, \"ion-text\", 4);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          }\n        },\n        dependencies: [i3.NgIf, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.TextValueAccessor],\n        styles: [\"ion-content[_ngcontent-%COMP%]{--padding-top: 60%;--padding-start:10%;--padding-end:10%;--background: url(0deb9ef5f3dbc8c00422889d8eb32062.jpeg) 0 0/100% 100% no-repeat}.input-group[_ngcontent-%COMP%]{background:#fff;border-radius:10px;overflow:hidden;margin-bottom:15px}.errors[_ngcontent-%COMP%]{font-size:small;color:#fff;background:var(--ion-color-danger);padding-left:15px;padding-top:5px;padding-bottom:5px}\"]\n      });\n    }\n  }\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}